{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation StackSet that creates an IAM Role with cross-account read permissions for AWS services that Nullify needs to access. Please use default value for variables unless it is absolutely necessary to change it.",
    "Parameters": {
      "AWSRegion": {
        "Type": "String",
        "Description": "The AWS region where resources are deployed.",
        "Default": "ap-southeast-2"
      },
      "CrossAccountRoleArn": {
        "Type": "String",
        "Description": "The ARN of the role in Nullify's AWS account that requires read access to customer's AWS resources.",
        "Default": "arn:aws:iam::521464361009:role/nullify-uat-awsintegration-readonly",
        "AllowedPattern": "^arn:aws:iam::[0-9]{12}:role/.+$",
        "ConstraintDescription": "Must be a valid ARN for an IAM role in the format arn:aws:iam::\u003caccount-id\u003e:role/\u003crole-name\u003e."
      },
      "CustomerName": {
        "Type": "String",
        "Description": "The name of the customer to create the role for.",
        "AllowedPattern": "^[a-zA-Z][a-zA-Z0-9_-]*$",
        "MinLength": 1,
        "MaxLength": 10
      },
      "EKSOidcProviderURL": {
        "Type": "String",
        "Description": "The URL of the OIDC provider for EKS (leave empty if not using EKS)."
      },
      "EnableEKSIntegration": {
        "Type": "String",
        "Description": "Whether to enable EKS integration with service accounts.",
        "Default": "false",
        "AllowedValues": [
          "true",
          "false"
        ]
      },
      "ExternalID": {
        "Type": "String",
        "Description": "The external ID for the role."
      }
    },
    "Conditions": {
      "EKSIntegrationEnabled": {
        "Fn::Equals": [
          {
            "Ref": "EnableEKSIntegration"
          },
          "true"
        ]
      },
      "EKSOIDCURLMissing": {
        "Fn::Equals": [
          {
            "Ref": "EKSOidcProviderURL"
          },
          ""
        ]
      },
      "InvalidEKSConfig": {
        "Fn::And": [
          {
            "Condition": "EKSIntegrationEnabled"
          },
          {
            "Condition": "EKSOIDCURLMissing"
          }
        ]
      },
      "ValidEKSConfig": {
        "Fn::And": [
          {
            "Condition": "EKSIntegrationEnabled"
          },
          {
            "Fn::Not": [
              {
                "Condition": "EKSOIDCURLMissing"
              }
            ]
          }
        ]
      }
    },
    "Resources": {
      "DenyActionsPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description": "Explicitly deny specific IAM actions",
          "ManagedPolicyName": {
            "Fn::Sub": "AWSIntegration-${CustomerName}-DenyActions"
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Deny",
                "Action": [
                  "s3:GetObject",
                  "s3:GetObject*",
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:BatchGetImage",
                  "ecr:GetAuthorizationToken"
                ],
                "Resource": "*",
                "Condition": {}
              }
            ]
          }
        }
      },
      "EKSValidationCheck": {
        "Type": "AWS::CloudFormation::WaitConditionHandle",
        "Properties": {
          "Condition": "InvalidEKSConfig",
          "Message": "Error: When EKS integration is enabled, an OIDC provider URL must be specified."
        }
      },
      "IAMViewOnlyRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Fn::If": [
              "ValidEKSConfig",
              {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": {
                          "Ref": "ExternalID"
                        }
                      }
                    },
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": {
                        "Ref": "CrossAccountRoleArn"
                      }
                    }
                  },
                  {
                    "Action": "sts:AssumeRoleWithWebIdentity",
                    "Condition": {
                      "StringEquals": {
                        "Fn::Sub": {
                          "${EKSOidcProviderURL}:sub": "system:serviceaccount:nullify:nullify-k8s-collector-sa"
                        }
                      }
                    },
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": {
                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:oidc-provider/${EKSOidcProviderURL}"
                      }
                    }
                  }
                ],
                "Version": "2012-10-17"
              },
              {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": {
                          "Ref": "ExternalID"
                        }
                      }
                    },
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": {
                        "Ref": "CrossAccountRoleArn"
                      }
                    }
                  }
                ],
                "Version": "2012-10-17"
              }
            ]
          },
          "ManagedPolicyArns": [
            {
              "Ref": "ReadOnlyAccessPolicy"
            },
            {
              "Ref": "ReadOnlyAccessPolicy2"
            },
            {
              "Ref": "S3AccessPolicy"
            },
            {
              "Ref": "DenyActionsPolicy"
            }
          ],
          "RoleName": {
            "Fn::Sub": "AWSIntegration-${CustomerName}-NullifyReadOnlyRole"
          }
        }
      },
      "ReadOnlyAccessPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description": "Read-only access for AWS resources for Nullify (Part 1)",
          "ManagedPolicyName": {
            "Fn::Sub": "AWSIntegration-${CustomerName}-ReadOnlyAccess-Part1"
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "a4b:List*",
                  "access-analyzer:GetAccessPreview",
                  "access-analyzer:GetAnalyzedResource",
                  "access-analyzer:GetAnalyzer",
                  "access-analyzer:GetArchiveRule",
                  "access-analyzer:GetFinding",
                  "access-analyzer:GetFindingsStatistics",
                  "access-analyzer:GetGeneratedPolicy",
                  "access-analyzer:List*",
                  "access-analyzer:ValidatePolicy",
                  "account:GetAccountInformation",
                  "account:GetAlternateContact",
                  "account:GetChallengeQuestions",
                  "account:GetContactInformation",
                  "account:GetPrimaryEmail",
                  "account:GetRegionOptStatus",
                  "account:ListRegions",
                  "acm-pca:Describe*",
                  "acm-pca:List*",
                  "acm:Describe*",
                  "acm:List*",
                  "aiops:GetInvestigation",
                  "aiops:GetInvestigationEvent",
                  "aiops:GetInvestigationGroup",
                  "aiops:GetInvestigationResource",
                  "aiops:List*",
                  "airflow:List*",
                  "amplify:GetBranch",
                  "amplify:GetDomainAssociation",
                  "amplify:GetWebhook",
                  "amplify:List*",
                  "aoss:BatchGetLifecyclePolicy",
                  "aoss:BatchGetVpcEndpoint",
                  "aoss:GetAccessPolicy",
                  "aoss:GetAccountSettings",
                  "aoss:GetPoliciesStats",
                  "aoss:GetSecurityConfig",
                  "aoss:GetSecurityPolicy",
                  "aoss:List*",
                  "apigateway:GET",
                  "appconfig:List*",
                  "appfabric:List*",
                  "appflow:List*",
                  "application-autoscaling:Describe*",
                  "application-autoscaling:ListTagsForResource",
                  "application-signals:List*",
                  "application-signals:ListTagsForResource",
                  "applicationinsights:List*",
                  "appmesh:Describe*",
                  "appmesh:List*",
                  "apprunner:DescribeAutoScalingConfiguration",
                  "apprunner:DescribeCustomDomains",
                  "apprunner:DescribeObservabilityConfiguration",
                  "apprunner:DescribeService",
                  "apprunner:DescribeVpcConnector",
                  "apprunner:DescribeVpcIngressConnection",
                  "apprunner:DescribeWebAclForService",
                  "apprunner:List*",
                  "appstream:Describe*",
                  "appstream:List*",
                  "appsync:List*",
                  "apptest:ListTagsForResource",
                  "apptest:List*",
                  "aps:DescribeAlertManagerDefinition",
                  "aps:DescribeLoggingConfiguration",
                  "aps:DescribeRuleGroupsNamespace",
                  "aps:DescribeScraper",
                  "aps:DescribeWorkspace",
                  "aps:List*",
                  "aps:ListWorkspaces",
                  "aps:QueryMetrics",
                  "arc-zonal-shift:GetAutoshiftObserverNotificationStatus",
                  "arc-zonal-shift:ListAutoshifts",
                  "arc-zonal-shift:ListManagedResources",
                  "arc-zonal-shift:ListZonalShifts",
                  "artifact:ListAgreements",
                  "artifact:ListCustomerAgreements",
                  "artifact:ListReports",
                  "athena:List*",
                  "auditmanager:List*",
                  "auditmanager:ListTagsForResource",
                  "auditmanager:ValidateAssessmentReportIntegrity",
                  "autoscaling-plans:Describe*",
                  "autoscaling:Describe*",
                  "backup-gateway:List*",
                  "backup:Describe*",
                  "backup:List*",
                  "batch:Describe*",
                  "batch:List*",
                  "bedrock:List*",
                  "billingconductor:List*",
                  "braket:SearchDevices",
                  "braket:SearchJobs",
                  "braket:SearchQuantumTasks",
                  "budgets:Describe*",
                  "budgets:ListTagsForResource",
                  "budgets:View*",
                  "cassandra:Select",
                  "ce:List*",
                  "chatbot:Describe*",
                  "chatbot:List*",
                  "chime:List*",
                  "chime:Retrieve*",
                  "chime:Search*",
                  "chime:Validate*",
                  "cleanrooms:List*",
                  "cleanrooms:PreviewPrivacyImpact",
                  "cloud9:Describe*",
                  "cloud9:List*",
                  "clouddirectory:BatchRead",
                  "clouddirectory:List*",
                  "clouddirectory:LookupPolicy",
                  "cloudformation:Describe*",
                  "cloudformation:Detect*",
                  "cloudformation:Estimate*",
                  "cloudformation:List*",
                  "cloudformation:ValidateTemplate",
                  "cloudfront-keyvaluestore:Describe*",
                  "cloudfront-keyvaluestore:List*",
                  "cloudfront:Describe*",
                  "cloudfront:List*",
                  "cloudhsm:Describe*",
                  "cloudhsm:List*",
                  "cloudsearch:Describe*",
                  "cloudsearch:List*",
                  "cloudtrail:Describe*",
                  "cloudtrail:Get*",
                  "cloudtrail:List*",
                  "cloudtrail:LookupEvents",
                  "cloudwatch:Describe*",
                  "cloudwatch:GenerateQuery",
                  "codeartifact:List*",
                  "codebuild:Describe*",
                  "cognito-identity:Describe*",
                  "cognito-identity:GetIdentityPoolAnalytics",
                  "cognito-identity:GetIdentityPoolDailyAnalytics",
                  "cognito-identity:GetIdentityPoolRoles",
                  "cognito-identity:GetIdentityProviderDailyAnalytics",
                  "cognito-identity:List*",
                  "cognito-identity:Lookup*",
                  "cognito-idp:AdminList*",
                  "cognito-idp:Describe*",
                  "cognito-idp:List*",
                  "cognito-sync:Describe*",
                  "cognito-sync:List*",
                  "cognito-sync:QueryRecords",
                  "devops-guru:List*",
                  "discovery:List*",
                  "identitystore:Describe*",
                  "identity-sync:ListSyncFilters",
                  "ecr-public:BatchCheckLayerAvailability",
                  "ecr-public:DescribeImages",
                  "ecr-public:DescribeImageTags",
                  "ecr-public:DescribeRegistries",
                  "ecr-public:DescribeRepositories",
                  "ecr-public:GetRepositoryCatalogData",
                  "ecr-public:GetRepositoryPolicy",
                  "ecr-public:ListTagsForResource",
                  "ecr:BatchCheck*",
                  "ecr:Describe*",
                  "ecr:List*",
                  "ecs:Describe*",
                  "ecs:List*",
                  "eks:Describe*",
                  "eks:List*",
                  "elastic-inference:Describe*",
                  "elastic-inference:List*",
                  "elasticache:Describe*",
                  "elasticache:List*",
                  "elasticbeanstalk:Check*",
                  "elasticbeanstalk:Describe*",
                  "elasticbeanstalk:List*",
                  "elasticfilesystem:Describe*",
                  "elasticfilesystem:ListTagsForResource",
                  "elasticloadbalancing:Describe*",
                  "elasticmapreduce:Describe*",
                  "elasticmapreduce:GetBlockPublicAccessConfiguration",
                  "elasticmapreduce:List*",
                  "elasticmapreduce:View*",
                  "emr-containers:Describe*",
                  "emr-containers:List*",
                  "elastictranscoder:List*",
                  "elastictranscoder:Read*",
                  "discovery:Describe*",
                  "config:SelectResourceConfig",
                  "iam:GenerateCredentialReport",
                  "iam:GenerateOrganizationsAccessReport",
                  "iam:GenerateServiceLastAccessedDetails",
                  "iam:SimulateCustomPolicy",
                  "iam:SimulatePrincipalPolicy",
                  "iotfleetwise:List*",
                  "iotroborunner:List*",
                  "iotsitewise:Describe*",
                  "iotsitewise:List*",
                  "iotwireless:List*",
                  "ivs:List*",
                  "ivschat:List*",
                  "kafka:Describe*",
                  "kafka:List*",
                  "kafkaconnect:List*",
                  "kendra:BatchGetDocumentStatus",
                  "kendra:DescribeDataSource",
                  "kendra:DescribeExperience",
                  "kendra:DescribeFaq",
                  "kendra:DescribeIndex",
                  "kendra:DescribePrincipalMapping",
                  "kendra:DescribeQuerySuggestionsBlockList",
                  "kendra:DescribeQuerySuggestionsConfig",
                  "kendra:DescribeThesaurus",
                  "kendra:List*",
                  "kinesis:Describe*",
                  "kinesis:List*",
                  "iam:Simulate*",
                  "iam:Generate*",
                  "iam:Get*",
                  "iam:List*",
                  "glue:Describe*",
                  "glue:List*",
                  "kinesisanalytics:Describe*",
                  "kinesisanalytics:Discover*",
                  "kinesisanalytics:List*",
                  "kinesisvideo:Describe*",
                  "kinesisvideo:List*",
                  "kms:Describe*",
                  "kms:List*",
                  "lakeformation:Describe*",
                  "lakeformation:Get*",
                  "lakeformation:List*",
                  "lakeformation:Search*",
                  "lambda:List*",
                  "lambda:Get*"
                ],
                "Resource": "*",
                "Condition": {}
              }
            ]
          }
        }
      },
      "ReadOnlyAccessPolicy2": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description": "Read-only access for AWS resources for Nullify (Part 2)",
          "ManagedPolicyName": {
            "Fn::Sub": "AWSIntegration-${CustomerName}-ReadOnlyAccess-Part2"
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "launchwizard:Describe*",
                  "launchwizard:GetWorkload",
                  "launchwizard:List*",
                  "lex:DescribeBot",
                  "lex:DescribeBotAlias",
                  "lex:DescribeBotChannel",
                  "lex:DescribeBotLocale",
                  "lex:DescribeBotReplica",
                  "lex:DescribeBotVersion",
                  "lex:DescribeExport",
                  "lex:DescribeImport",
                  "lex:DescribeIntent",
                  "lex:DescribeResourcePolicy",
                  "lex:DescribeSlot",
                  "lex:DescribeSlotType",
                  "lex:List*",
                  "license-manager:List*",
                  "lightsail:GetActiveNames",
                  "lightsail:GetAlarms",
                  "lightsail:GetAutoSnapshots",
                  "lightsail:GetBlueprints",
                  "lightsail:GetBucketAccessKeys",
                  "lightsail:GetBucketBundles",
                  "lightsail:GetBucketMetricData",
                  "lightsail:GetBuckets",
                  "lightsail:GetBundles",
                  "lightsail:GetCertificates",
                  "lightsail:GetCloudFormationStackRecords",
                  "lightsail:GetContainerAPIMetadata",
                  "lightsail:GetContainerImages",
                  "lightsail:GetContainerServiceDeployments",
                  "lightsail:GetContainerServiceMetricData",
                  "lightsail:GetContainerServicePowers",
                  "lightsail:GetContainerServices",
                  "lightsail:GetDiskSnapshot",
                  "lightsail:GetDiskSnapshots",
                  "lightsail:GetDistributionBundles",
                  "lightsail:GetDistributionLatestCacheReset",
                  "lightsail:GetDistributionMetricData",
                  "lightsail:GetDistributions",
                  "lightsail:GetDomain",
                  "lightsail:GetDomains",
                  "lightsail:GetExportSnapshotRecords",
                  "lightsail:GetInstancePortStates",
                  "lightsail:GetInstances",
                  "lightsail:GetInstanceSnapshot",
                  "lightsail:GetInstanceSnapshots",
                  "lightsail:GetInstanceState",
                  "lightsail:GetLoadBalancer",
                  "lightsail:GetLoadBalancerMetricData",
                  "lightsail:GetLoadBalancers",
                  "lightsail:GetLoadBalancerTlsCertificates",
                  "lightsail:GetOperation",
                  "lightsail:GetOperations",
                  "lightsail:GetOperationsForResource",
                  "lightsail:GetRegions",
                  "lightsail:GetRelationalDatabaseBlueprints",
                  "lightsail:GetRelationalDatabaseBundles",
                  "lightsail:GetRelationalDatabaseEvents",
                  "lightsail:GetRelationalDatabaseLogEvents",
                  "lightsail:GetRelationalDatabaseLogStreams",
                  "lightsail:GetRelationalDatabaseMetricData",
                  "lightsail:GetRelationalDatabaseParameters",
                  "lightsail:GetRelationalDatabases",
                  "lightsail:GetRelationalDatabaseSnapshot",
                  "lightsail:GetRelationalDatabaseSnapshots",
                  "lightsail:GetStaticIp",
                  "lightsail:GetStaticIps",
                  "logs:Describe*",
                  "logs:FilterLogEvents",
                  "logs:List*",
                  "logs:StartLiveTail",
                  "logs:StartQuery",
                  "logs:StopLiveTail",
                  "logs:StopQuery",
                  "logs:TestMetricFilter",
                  "m2:GetApplicationVersion",
                  "m2:GetDataSetDetails",
                  "m2:GetDataSetImportTask",
                  "m2:GetDeployment",
                  "m2:GetEnvironment",
                  "m2:List*",
                  "machinelearning:Describe*",
                  "macie2:Get*",
                  "macie2:List*",
                  "macie2:GetFindingsPublicationConfiguration",
                  "macie2:GetFindingStatistics",
                  "macie2:GetInvitationsCount",
                  "macie2:GetMacieSession",
                  "macie2:GetMember",
                  "macie2:GetResourceProfile",
                  "macie2:GetRevealConfiguration",
                  "macie2:GetSensitiveDataOccurrencesAvailability",
                  "macie2:GetSensitivityInspectionTemplate",
                  "macie2:GetUsageStatistics",
                  "macie2:GetUsageTotals",
                  "macie2:List*",
                  "macie2:SearchResources",
                  "managedblockchain:GetMember",
                  "managedblockchain:GetNetwork",
                  "managedblockchain:GetNode",
                  "managedblockchain:GetProposal",
                  "managedblockchain:List*",
                  "mediaconnect:Describe*",
                  "mediaconnect:List*",
                  "mediaconvert:List*",
                  "medialive:Describe*",
                  "medialive:Get*",
                  "medialive:List*",
                  "mediapackage-vod:Describe*",
                  "mediapackage-vod:List*",
                  "mediapackage:Describe*",
                  "mediapackage:List*",
                  "mediapackagev2:GetChannel",
                  "mediapackagev2:GetChannelGroup",
                  "mediapackagev2:GetChannelPolicy",
                  "mediapackagev2:GetHeadObject",
                  "mediapackagev2:GetOriginEndpoint",
                  "mediapackagev2:GetOriginEndpointPolicy",
                  "mediapackagev2:List*",
                  "mediastore:Describe*",
                  "mediastore:List*",
                  "memorydb:Describe*",
                  "memorydb:List*",
                  "mq:Describe*",
                  "mq:List*",
                  "network-firewall:Describe*",
                  "network-firewall:List*",
                  "networkmanager:DescribeGlobalNetworks",
                  "networkmanager:Get*",
                  "networkmanager:List*",
                  "nimble:List*",
                  "notifications-contacts:List*",
                  "notifications:Get*",
                  "notifications:List*",
                  "notifications:GetManagedNotificationEvent",
                  "notifications:GetNotificationConfiguration",
                  "notifications:GetNotificationsAccessForOrganization",
                  "notifications:GetNotificationEvent",
                  "notifications:List*",
                  "observabilityadmin:ListResourceTelemetry",
                  "observabilityadmin:ListResourceTelemetryForOrganization",
                  "one:ListUsers",
                  "opsworks-cm:Describe*",
                  "opsworks-cm:List*",
                  "opsworks:Describe*",
                  "organizations:Describe*",
                  "organizations:List*",
                  "outposts:List*",
                  "personalize:Describe*",
                  "personalize:List*",
                  "pi:DescribeDimensionKeys",
                  "pi:ListAvailableResourceDimensions",
                  "pi:ListAvailableResourceMetrics",
                  "pipes:DescribePipe",
                  "pipes:ListPipes",
                  "polly:Describe*",
                  "polly:List*",
                  "pricing:DescribeServices",
                  "pricing:ListPriceLists",
                  "qbusiness:List*",
                  "ram:List*",
                  "rbin:List*",
                  "rds:Describe*",
                  "rds:Download*",
                  "rds:List*",
                  "redshift-serverless:List*",
                  "redshift:Describe*",
                  "redshift:List*",
                  "redshift:View*",
                  "rekognition:Describe*",
                  "rekognition:Detect*",
                  "rekognition:List*",
                  "resource-explorer-2:List*",
                  "resource-groups:List*",
                  "resource-groups:Search*",
                  "robomaker:BatchDescribe*",
                  "robomaker:Describe*",
                  "robomaker:List*",
                  "route53-recovery-cluster:Get*",
                  "route53-recovery-cluster:List*",
                  "route53-recovery-control-config:Describe*",
                  "route53-recovery-control-config:Get*",
                  "route53-recovery-control-config:List*",
                  "route53-recovery-readiness:Get*",
                  "route53-recovery-readiness:List*",
                  "route53:Get*",
                  "route53:List*",
                  "route53:Test*",
                  "route53domains:Check*",
                  "route53domains:Get*",
                  "route53domains:List*",
                  "route53domains:View*",
                  "route53profiles:GetProfile",
                  "route53profiles:GetProfileAssociation",
                  "route53profiles:GetProfileResourceAssociation",
                  "route53profiles:ListProfileAssociations",
                  "route53profiles:ListProfileResourceAssociations",
                  "route53profiles:ListProfiles",
                  "route53profiles:ListTagsForResource",
                  "route53resolver:Get*",
                  "route53resolver:List*",
                  "rum:GetAppMonitor",
                  "rum:GetAppMonitorData",
                  "rum:ListAppMonitors",
                  "s3-object-lambda:List*",
                  "s3-outposts:Get*",
                  "s3-outposts:List*",
                  "s3:Describe*",
                  "s3:List*",
                  "s3:GetBucketLocation",
                  "sagemaker:Describe*",
                  "sagemaker:List*",
                  "scheduler:List*",
                  "schemas:Describe*",
                  "schemas:Get*",
                  "schemas:List*",
                  "schemas:Search*",
                  "sdb:List*",
                  "sdb:Select*",
                  "secretsmanager:GetResourcePolicy",
                  "secretsmanager:List*",
                  "securityhub:Describe*",
                  "securityhub:List*",
                  "securitylake:ListDataLakeExceptions",
                  "securitylake:ListDataLakes",
                  "securitylake:ListLogSources",
                  "securitylake:ListSubscribers",
                  "securitylake:ListTagsForResource",
                  "serverlessrepo:Get*",
                  "serverlessrepo:List*",
                  "serverlessrepo:SearchApplications",
                  "servicecatalog:Describe*",
                  "servicecatalog:List*",
                  "servicecatalog:Scan*",
                  "servicecatalog:Search*",
                  "servicediscovery:DiscoverInstances",
                  "servicediscovery:DiscoverInstancesRevision",
                  "servicediscovery:List*",
                  "servicequotas:List*",
                  "ses:Describe*",
                  "ses:List*",
                  "shield:Describe*",
                  "shield:List*",
                  "signer:DescribeSigningJob",
                  "signer:List*",
                  "signin:ListTrustedIdentityPropagationApplicationsForConsole",
                  "sms-voice:Describe*",
                  "sms-voice:List*",
                  "snowball:Describe*",
                  "snowball:List*",
                  "sns:Check*",
                  "sns:List*",
                  "sqs:List*",
                  "ssm-contacts:List*",
                  "ssm-sap:List*",
                  "ssm-quicksetup:List*",
                  "ssm:List*",
                  "sso-directory:List*",
                  "sso:List*",
                  "sso:Search*",
                  "states:Describe*",
                  "states:List*",
                  "states:ValidateStateMachineDefinition",
                  "storagegateway:Describe*",
                  "storagegateway:List*",
                  "sts:GetAccessKeyInfo",
                  "sts:GetCallerIdentity",
                  "sts:GetSessionToken",
                  "support:Describe*",
                  "support:SearchForCases",
                  "supportplans:ListSupportPlanModifiers",
                  "sustainability:GetCarbonFootprintSummary",
                  "swf:Count*",
                  "swf:Describe*",
                  "swf:List*",
                  "synthetics:Describe*",
                  "synthetics:List*",
                  "tag:Describe*",
                  "tag:Get*",
                  "tax:ListTaxRegistrations",
                  "timestream:Describe*",
                  "tnb:List*",
                  "transcribe:List*",
                  "transfer:Describe*",
                  "transfer:List*",
                  "transfer:TestIdentityProvider",
                  "translate:DescribeTextTranslationJob",
                  "translate:ListParallelData",
                  "translate:ListTerminologies",
                  "translate:ListTextTranslationJobs",
                  "trustedadvisor:Describe*",
                  "trustedadvisor:List*",
                  "verifiedpermissions:IsAuthorized",
                  "verifiedpermissions:IsAuthorizedWithToken",
                  "verifiedpermissions:List*",
                  "vpc-lattice:GetAccessLogSubscription",
                  "vpc-lattice:GetAuthPolicy",
                  "vpc-lattice:GetListener",
                  "vpc-lattice:GetResourcePolicy",
                  "vpc-lattice:GetRule",
                  "vpc-lattice:GetService",
                  "vpc-lattice:GetServiceNetwork",
                  "vpc-lattice:GetServiceNetworkServiceAssociation",
                  "vpc-lattice:GetServiceNetworkVpcAssociation",
                  "vpc-lattice:GetTargetGroup",
                  "vpc-lattice:List*",
                  "waf-regional:List*",
                  "waf:List*",
                  "wafv2:CheckCapacity",
                  "wafv2:Describe*",
                  "wafv2:List*",
                  "wellarchitected:ExportLens",
                  "wellarchitected:GetAnswer",
                  "wellarchitected:GetConsolidatedReport",
                  "wellarchitected:GetLens",
                  "wellarchitected:GetLensReview",
                  "wellarchitected:GetLensReviewReport",
                  "wellarchitected:GetLensVersionDifference",
                  "wellarchitected:GetMilestone",
                  "wellarchitected:GetProfile",
                  "wellarchitected:GetProfileTemplate",
                  "wellarchitected:GetReviewTemplate",
                  "wellarchitected:GetReviewTemplateAnswer",
                  "wellarchitected:GetReviewTemplateLensReview",
                  "wellarchitected:GetWorkload",
                  "wellarchitected:List*",
                  "workdocs:CheckAlias",
                  "workdocs:Describe*",
                  "workmail:Describe*",
                  "workmail:List*",
                  "workmail:Search*",
                  "workspaces-web:GetBrowserSettings",
                  "workspaces-web:GetIdentityProvider",
                  "workspaces-web:GetNetworkSettings",
                  "workspaces-web:List*",
                  "workspaces:Describe*"
                ],
                "Resource": "*",
                "Condition": {}
              }
            ]
          }
        }
      },
      "S3AccessPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
          "Description": "S3 access for Nullify bucket",
          "ManagedPolicyName": {
            "Fn::Sub": "AWSIntegration-${CustomerName}-S3Access"
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:ListBucket"
                ],
                "Resource": [
                  "arn:aws:s3:::nullify-uat-death-star-dast-cpw5uwu4",
                  "arn:aws:s3:::nullify-uat-death-star-dast-cpw5uwu4/*"
                ],
                "Condition": {}
              }
            ]
          }
        }
      }
    },
    "Outputs": {
      "IAMRoleArn": {
        "Description": "ARN of the IAM Role with cross-account read access.",
        "Value": {
          "Fn::GetAtt": [
            "IAMViewOnlyRole",
            "Arn"
          ]
        }
      }
    }
}
